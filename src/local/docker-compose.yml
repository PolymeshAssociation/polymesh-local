version: '2'
services:
  postgres:
    image: postgres:12-alpine
    restart: always
    ports:
      - 5432:5432
    volumes:
      - 'polymesh_postgres:/var/lib/postgresql/data'
      - './pg-extensions.sh:/docker-entrypoint-initdb.d/load-extensions.sh'
    environment:
      POSTGRES_PASSWORD: postgres

  alice:
    build:
      context: .
      dockerfile: mesh.Dockerfile
    restart: always
    ports:
      - '9944:9944'
      - '9933:9933'
      - '30333:30333'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - 'polymesh_alice:/var/lib/polymesh/chains'
    environment:
      - FAKETIME=${FAKETIME}
    command:
      [
        '--alice --node-key 0000000000000000000000000000000000000000000000000000000000000001 --chain ${CHAIN}',
      ]

  bob:
    build:
      context: .
      dockerfile: mesh.Dockerfile
    restart: always
    ports:
      - '8833:9933'
      - '8844:9944'
      - '40333:30333'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - 'polymesh_bob:/var/lib/polymesh/chains'
    environment:
      - BOOT_NODE_PEER_ID=12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp
      - FAKETIME=${FAKETIME}
    command:
      [
        '--bob --chain ${CHAIN}',
      ]

  charlie:
    build:
      context: .
      dockerfile: mesh.Dockerfile
    restart: always
    ports:
      - '7733:9933'
      - '7744:9944'
      - '50333:30333'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - 'polymesh_charlie:/var/lib/polymesh/chains'
    environment:
      - BOOT_NODE_PEER_ID=12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp
      - FAKETIME=${FAKETIME}
    command:
      [
        '--charlie --chain ${CHAIN}'
      ]

  subquery:
    image: '${SUBQUERY_IMAGE:-polymeshassociation/polymesh-subquery:latest}'
    restart: always
    healthcheck:
      test: curl --fail http://localhost:3000/meta || exit 1
      interval: 20s
      retries: 10
      start_period: 20s
      timeout: 10s
    depends_on:
      - 'postgres'
    ports:
      - 3006:3000
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      NETWORK_ENDPOINT: ws://alice:9944
      NETWORK_HTTP_ENDPOINT: http://alice:9933
      DB_USER: '${PG_USER}'
      DB_PASS: '${PG_PASSWORD}'
      DB_DATABASE: '${PG_DB}'
      DB_PORT: '${PG_PORT}'
      DB_HOST: '${PG_HOST}'
      NODE_ENV: local
    command:
      - --batch-size=500
      - -f=/app
      - --local

  graphql:
    image: onfinality/subql-query:v2.5.0
    ports:
      - 3009:3000
    depends_on:
      postgres:
        condition: service_started
      subquery:
        condition: service_healthy
    restart: always
    environment:
      DB_DATABASE: postgres
      DB_USER: '${PG_USER}'
      DB_PASS: '${PG_PASSWORD}'
      DB_PORT: '${PG_PORT}'
      DB_HOST: '${PG_HOST}'
    command:
      - --name=public
      - --playground
      - --indexer=http://subquery:3000

# note "tooling" is deprecated - new integrations should use "graphql"
  tooling:
    image: ${TOOLING_IMAGE:-polymeshassociation/polymesh-tooling-gql:latest}
    restart: always
    depends_on:
      - 'postgres'
    ports:
      - 3007:3000
    environment:
      PG_HOST: '${PG_HOST}'
      PG_USERNAME: '${PG_USER}'
      PG_PASSWORD: '${PG_PASSWORD}'
      STAGE: dev

  rest_api:
    image: ${REST_IMAGE:-polymeshassociation/polymesh-rest-api}
    restart: always
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - 3004:3000
    environment:
      POLYMESH_NODE_URL: 'ws://alice:9944'
      POLYMESH_MIDDLEWARE_V2_URL: 'http://graphql:3000'
      LOCAL_SIGNERS: ${LOCAL_SIGNERS}
      LOCAL_MNEMONICS: ${LOCAL_MNEMONICS}
      VAULT_URL: '${VAULT_URL}'
      VAULT_TOKEN: '${VAULT_TOKEN}'
      AUTH_STRATEGY: 'open'
      DEVELOPER_UTILS: 'true'

  dashboard:
    image: nginx
    restart: always
    ports:
      - 3000:80
    volumes:
      - '${DATA_DIR}/uis/dashboard:/var/www/app:ro' # :ro -> read only
      - '${DATA_DIR}/nginx.conf:/etc/nginx/nginx.conf:ro'

  bridge:
    image: nginx
    restart: always
    ports:
      - 3001:80
    volumes:
      - '${DATA_DIR}/uis/bridge:/var/www/app:ro'
      - '${DATA_DIR}/nginx.conf:/etc/nginx/nginx.conf:ro'

  governance:
    image: nginx
    restart: always
    ports:
      - 3002:80
    volumes:
      - '${DATA_DIR}/uis/governance:/var/www/app:ro'
      - '${DATA_DIR}/nginx.conf:/etc/nginx/nginx.conf:ro'

  issuer:
    image: nginx
    restart: always
    ports:
      - 3003:80
    volumes:
      - '${DATA_DIR}/uis/issuer:/var/www/app:ro'
      - '${DATA_DIR}/nginx.conf:/etc/nginx/nginx.conf:ro'

  schema:
    image: nginx
    restart: always
    ports:
      - 3008:80
    volumes:
      - '${DATA_DIR}/schemas/polymesh_schema_${POLYMESH_VERSION}.json:/var/www/app/polymesh_schema.json:ro'
      - '${DATA_DIR}/nginx.conf:/etc/nginx/nginx.conf:ro'

volumes:
  polymesh_alice:
    external: true
  polymesh_bob:
    external: true
  polymesh_charlie:
    external: true
  polymesh_postgres:
    external: true

networks:
  default:
    name: 'polymesh-local'
